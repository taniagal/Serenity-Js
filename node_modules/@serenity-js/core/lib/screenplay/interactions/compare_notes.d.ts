import { Interaction } from '../activities';
import { AnswersQuestions, UsesAbilities } from '../actor';
import { Expectation } from '../expectations';
import { OneOrMany } from '../lists';
import { Question } from '../question';
export declare class CompareNotes<Expected, Actual extends PromiseLike<OneOrMany<Expected>> | OneOrMany<Expected>> implements Interaction {
    private actual;
    private expect;
    private topic;
    static toSeeIf<E, A extends PromiseLike<OneOrMany<E>> | OneOrMany<E>>(question: Question<A>, expectation: Expectation<E, A>, topic: {
        toString: () => string;
    }): CompareNotes<E, A>;
    performAs(actor: UsesAbilities & AnswersQuestions): PromiseLike<void>;
    constructor(actual: Question<Actual>, expect: Expectation<Expected, Actual>, topic: string);
    toString: () => string;
    private subject;
}
