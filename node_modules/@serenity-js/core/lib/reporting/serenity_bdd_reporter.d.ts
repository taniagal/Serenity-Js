import { DomainEvent } from '../domain';
import { FileSystem, JSONObject } from '../io';
import { Stage, StageCrewMember } from '../stage';
import { ActivityPeriod, RehearsalPeriod, ReportExporter, ScenePeriod } from './index';
import { ActivityReport, FullReport, SceneReport } from './serenity_bdd_report';
export declare function serenityBDDReporter(requirementsDirectory?: string, outputDirectory?: string): StageCrewMember;
export declare class SerenityBDDReporter implements StageCrewMember {
    private readonly requirementsDirectory;
    private readonly fs;
    private static Events_of_Interest;
    private stage;
    constructor(requirementsDirectory: any, fs: FileSystem);
    assignTo(stage: Stage): void;
    notifyOf(event: DomainEvent<any>): void;
    private persistReport();
}
/**
 * Transforms the tree structure of the RehearsalPeriod to a format acceptable by Protractor
 */
export declare class SerenityBDDReportExporter implements ReportExporter<JSONObject> {
    private readonly requirementsDirectory;
    private errorExporter;
    private photoExporter;
    constructor(requirementsDirectory: any);
    exportRehearsal(node: RehearsalPeriod): PromiseLike<FullReport>;
    exportScene(node: ScenePeriod): PromiseLike<SceneReport>;
    exportActivity(node: ActivityPeriod): PromiseLike<ActivityReport>;
    private idOf(node, tags);
    private issuesCoveredBy(scene);
    private serialisedTags(tags);
    private isAnIssue;
}
