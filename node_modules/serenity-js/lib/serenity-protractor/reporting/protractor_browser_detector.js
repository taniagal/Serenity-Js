"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var domain_1 = require("@serenity-js/core/lib/domain");
var async_1 = require("@serenity-js/core/lib/recording/async");
var ProtractorBrowserDetector = (function () {
    function ProtractorBrowserDetector(browser) {
        this.browser = browser;
    }
    ProtractorBrowserDetector.prototype.assignTo = function (stage) {
        this.stage = stage;
        this.stage.manager.registerInterestIn(ProtractorBrowserDetector.Events_of_Interest, this);
    };
    ProtractorBrowserDetector.prototype.notifyOf = function (event) {
        switch (event.constructor.name) {
            case domain_1.SceneStarts.name:
                return this.sceneStarts(event);
        }
    };
    ProtractorBrowserDetector.prototype.sceneStarts = function (event) {
        var _this = this;
        var browserName = async_1.defer(function () { return _this.browser.getCapabilities().then(function (capabilities) { return capabilities.get('browserName'); }); });
        var browserTag = browserName.then(function (name) { return new domain_1.Tag('browser', [name]); });
        var contextTag = browserName.then(function (name) { return new domain_1.Tag('context', [name]); });
        this.stage.manager.notifyOf(new domain_1.SceneTagged(browserTag));
        this.stage.manager.notifyOf(new domain_1.SceneTagged(contextTag));
    };
    return ProtractorBrowserDetector;
}());
ProtractorBrowserDetector.Events_of_Interest = [domain_1.SceneStarts];
exports.ProtractorBrowserDetector = ProtractorBrowserDetector;
//# sourceMappingURL=protractor_browser_detector.js.map