"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var browse_the_web_1 = require("../abilities/browse_the_web");
var Execute = (function () {
    function Execute() {
    }
    return Execute;
}());
Execute.script = function () {
    var lines = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        lines[_i] = arguments[_i];
    }
    return new ExecuteScript(lines.join('\n'));
};
Execute.fn = function (fn) { return new ExecuteScript(fn); };
Execute.asyncScript = function () {
    var lines = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        lines[_i] = arguments[_i];
    }
    return new ExecuteAsyncScript(lines.join('\n'));
};
Execute.asyncFn = function (fn) { return new ExecuteAsyncScript(fn); };
exports.Execute = Execute;
var ExecuteScript = (function () {
    function ExecuteScript(script, args) {
        if (args === void 0) { args = []; }
        var _this = this;
        this.script = script;
        this.args = args;
        this.on = function (target) { return new ExecuteScript(_this.script, [target].concat(_this.args)); };
        this.withArguments = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ExecuteScript(_this.script, _this.args.concat(args));
        };
    }
    ExecuteScript.prototype.performAs = function (actor) {
        return (_a = browse_the_web_1.BrowseTheWeb.as(actor)).executeScript.apply(_a, [this.script].concat(this.args));
        var _a;
    };
    return ExecuteScript;
}());
exports.ExecuteScript = ExecuteScript;
var ExecuteAsyncScript = (function () {
    function ExecuteAsyncScript(script, args) {
        if (args === void 0) { args = []; }
        var _this = this;
        this.script = script;
        this.args = args;
        this.on = function (target) { return new ExecuteAsyncScript(_this.script, [target].concat(_this.args)); };
        this.withArguments = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ExecuteAsyncScript(_this.script, _this.args.concat(args));
        };
    }
    ExecuteAsyncScript.prototype.performAs = function (actor) {
        return (_a = browse_the_web_1.BrowseTheWeb.as(actor)).executeAsyncScript.apply(_a, [this.script].concat(this.args));
        var _a;
    };
    return ExecuteAsyncScript;
}());
exports.ExecuteAsyncScript = ExecuteAsyncScript;
//# sourceMappingURL=execute.js.map