import { Activity, Interaction } from '@serenity-js/core/lib/screenplay';
import { Target } from '../ui/target';
export declare class Duration {
    private milliseconds;
    static ofMillis: (milliseconds: number) => Duration;
    static ofSeconds: (seconds: number) => Duration;
    toMillis: () => number;
    toString: () => string;
    constructor(milliseconds: number);
}
export declare type SuccessCondition<T> = (subject: T, timeout: Duration) => Activity;
export declare class Wait {
    static for: (duration: Duration) => Interaction;
    static upTo: (timeout: Duration) => ActiveWait;
    static until<T>(somethingToWaitFor: T, condition: SuccessCondition<T>): Activity;
}
export declare class ActiveWait {
    private timeout;
    private static Default_Timeout;
    until<T>(somethingToWaitFor: T, condition: SuccessCondition<T>): Activity;
    constructor(timeout?: Duration);
}
export declare class Is {
    static visible: () => SuccessCondition<Target>;
    static invisible: () => SuccessCondition<Target>;
    static present: () => SuccessCondition<Target>;
    static absent: () => SuccessCondition<Target>;
    static selected: () => SuccessCondition<Target>;
    static clickable: () => SuccessCondition<Target>;
    private static aTargetThat(condition);
}
