/// <reference types="selenium-webdriver" />
import { Ability, UsesAbilities } from '@serenity-js/core/lib/screenplay';
import { ElementArrayFinder, ElementFinder, ProtractorBrowser } from 'protractor';
import * as webdriver from 'selenium-webdriver';
import { Target } from '../ui/target';
export declare class BrowseTheWeb implements Ability {
    private browser;
    private parentWindow?;
    /**
     *
     * Instantiates the Ability to BrowseTheWeb, allowing the Actor to interact with a Web UI
     *
     * @param browser
     * @return {BrowseTheWeb}
     */
    static using(browser: ProtractorBrowser): BrowseTheWeb;
    /**
     * Used to access the Actor's ability to BrowseTheWeb from within the Interaction classes, such as Click or Enter
     *
     * @param actor
     * @return {BrowseTheWeb}
     */
    static as(actor: UsesAbilities): BrowseTheWeb;
    locate(target: Target): ElementFinder;
    locateAll(target: Target): ElementArrayFinder;
    takeScreenshot(): PromiseLike<string>;
    get(destination: string, timeout?: number): PromiseLike<void>;
    getTitle(): PromiseLike<string>;
    getCurrentUrl(): PromiseLike<string>;
    actions(): webdriver.ActionSequence;
    manage(): webdriver.Options;
    switchToParentWindow(): PromiseLike<void>;
    acceptAlert(): PromiseLike<void>;
    dismissAlert(): PromiseLike<void>;
    switchToWindow(handle: (handles: string[]) => string): PromiseLike<void>;
    sleep(millis: number): PromiseLike<void>;
    wait(condition: webdriver.promise.Promise<any> | webdriver.until.Condition<any> | Function, timeout?: number, message?: string): PromiseLike<void>;
    enableAngularSynchronisation(enable: boolean): PromiseLike<any>;
    executeScript(script: string | Function, ...args: any[]): PromiseLike<any>;
    executeAsyncScript(script: string | Function, ...args: any[]): PromiseLike<any>;
    constructor(browser: ProtractorBrowser);
    private resolveTargets(maybeTarget);
}
